{
  "id": "castor-informatique.fr__questions__algorea_training_2__01_sequence_02_gems",
  "version": "fr.01",
  "authors": "Mathias Hiron, Marielle Léonard",
  "title": "Beheize das Schloss",
  "intro": "Programmiere den Roboter",
  "intros": {
    "easy": "Der Roboter soll das Holz in den Kamin legen.\nBeim Verlassen einer Plattform fährt der Roboter automatisch auf eine Plattform darunter. Der Roboter geht kaputt, wenn er mehr als drei Felder nach unten springt. Das Holz liegt immer zwischen Roboter und Kamin.\n Beachte: Dein Programm muss mit allen Testfällen zurechtkommen.",
    "medium": "Der Roboter soll das Holz in den Kamin legen.\nBeim Verlassen einer Plattform fährt der Roboter automatisch auf eine Plattform darunter. Der Roboter geht kaputt, wenn er mehr als drei Felder nach unten springt. Das Holz liegt immer zwischen Roboter und Kamin.\n Beachte: Dein Programm muss mit allen Testfällen zurechtkommen.",
    "hard": "Der Roboter soll das Holz in die Kamine legen.\nDer Roboter kann immer nur einen Holzstapel tragen. In jeden Kamin kann nur ein Holzstapel gelegt werden. Alle Ebenen sind 3 Schritte lang, wobei einige Plattformen teilweise fehlen.\nBeim Verlassen einer Plattform fährt der Roboter automatisch auf eine Plattform darunter. Der Roboter geht kaputt, wenn er mehr als drei Felder nach unten springt. "
  },
  "menu": ["Bedingte Anweisungen – Übungen", "Beheize das Schloss"],
  "sources": [
    "https://jwinf.de/task/1159",
    "https://jwinf.de/tasks/jwinf/jwinf-aufgaben/training/training-plattformen-if/task.js",
    "https://jwinf.de/tasks/jwinf/jwinf-aufgaben/training/training-plattformen-if/index.html?channelId=task"
  ],
  "gridInfos": {
    "backgroundColor": "#1f003c",
    "borderColor": "#888888",
    "conceptViewer": false,
    "hasGravity": true,
    "contextType": "castle",
    "bagSize": 1,
    "nbPlatforms": 100,
    "maxInstructions": {
      "basic": 12,
      "easy": 12,
      "medium": 20,
      "hard": 30
    },
    "itemTypes": {
      "robot": {
        "img": "castle_robot.png",
        "side": 80,
        "nbStates": 9,
        "isRobot": true,
        "offsetX": -11,
        "offsetY": 3,
        "zOrder": 3
      },
      "platform": {
        "num": 2,
        "img": "castle/platform.png",
        "name": "platform",
        "side": 60,
        "isObstacle": true,
        "zOrder": 0
      },
      "hearth": {
        "num": 4,
        "img": "castle/hearth.png",
        "name": "hearth",
        "side": 60,
        "isContainer": true,
        "zOrder": 1
      },
      "wood": {
        "num": 5,
        "img": "castle/firewood.png",
        "name": "firewood",
        "side": 60,
        "isWithdrawable": true,
        "zOrder": 2
      },
      "wall": {
        "num": 6,
        "img": "grey_brick_wall.png",
        "side": 60,
        "isObstacle": true,
        "zOrder": 0
      }
    },
    "includeBlocks": {
      "groupByCategory": false,
      "generatedBlocks": {
        "robot": {
          "easy": [
            "forward",
            "withdrawObject",
            "dropObject",
            "dropPlatformInFront",
            "platformInFront"
          ],
          "medium": [
            "forward",
            "withdrawObject",
            "dropObject",
            "dropPlatformInFront",
            "platformInFront",
            "onObject",
            "onContainer"
          ],
          "hard": [
            "forward",
            "turnAround",
            "jump",
            "withdrawObject",
            "dropObject",
            "dropPlatformInFront",
            "dropPlatformAbove",
            "platformInFront",
            "platformAbove",
            "onObject",
            "onContainer"
          ]
        }
      },
      "standardBlocks": {
        "includeAll": false,
        "wholeCategories": [],
        "singleBlocks": {
          "easy": ["controls_if", "logic_negate"],
          "medium": ["controls_repeat", "controls_if", "logic_negate"],
          "hard": ["controls_repeat", "controls_if", "logic_negate"]
        }
      },
      "pythonAdditionalFunctions": {
        "shared": ["range"]
      }
    },
    "blocklyColourTheme": "bwinf"
  },
  "levels": {
    "easy": [
      {
        "tiles": [
          [1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1],
          [1, 1, 5, 4, 1],
          [2, 1, 2, 2, 2],
          [1, 1, 1, 1, 1]
        ],
        "initItems": [
          {
            "row": 2,
            "col": 0,
            "dir": 0,
            "type": "robot"
          }
        ]
      },
      {
        "tiles": [
          [1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1],
          [1, 1, 5, 4, 1],
          [2, 2, 2, 2, 2],
          [1, 1, 1, 1, 1]
        ],
        "initItems": [
          {
            "row": 2,
            "col": 0,
            "dir": 0,
            "type": "robot"
          }
        ]
      }
    ],
    "medium": [
      {
        "tiles": [
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
          [2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        ],
        "initItems": [
          {
            "row": 2,
            "col": 0,
            "dir": 0,
            "type": "robot"
          }
        ]
      },
      {
        "tiles": [
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 4],
          [2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        ],
        "initItems": [
          {
            "row": 2,
            "col": 0,
            "dir": 0,
            "type": "robot"
          }
        ]
      },
      {
        "tiles": [
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 5, 1, 1, 1, 1, 1, 4, 1, 1],
          [2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        ],
        "initItems": [
          {
            "row": 2,
            "col": 0,
            "dir": 0,
            "type": "robot"
          }
        ]
      }
    ],
    "hard": [
      {
        "tiles": [
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 4, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 4, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          [2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        ],
        "initItems": [
          {
            "row": 10,
            "col": 0,
            "dir": 0,
            "type": "robot"
          }
        ]
      }
    ]
  }
}
